{"version":3,"sources":["clearcaches/src/ClearCachesUtility.js"],"names":["$","Craft","ClearCachesUtility","Garnish","Base","extend","$trigger","$form","formId","$status","addListener","this","preventDefault","onSubmit","progressBar","ev","resetProgressBar","ProgressBar","postData","getPostData","removeClass","$progressBar","velocity","params","opacity","response","proxy","expandPostArray","data","caches","postActionRequest","action","textStatus","error","alert","updateProgressBar","setTimeout","complete","noop","$allDone","css","addClass","trigger","duration","setProgressPercentage","appendTo","jQuery"],"mappings":"CAAA,SAACA,GACGC,MAAMC,mBAAqBC,QAAQC,KAAKC,OAEhCC,CACOA,SAFX,KAIUC,MAAA,KAEGD,KAAAA,SAAaE,GACbC,KAAUT,MAAEA,EAAA,IAAAQ,GAEZE,KAAAA,SAAiBH,EAAtB,eAAuCI,KAAvCJ,OATRI,KAAAF,QAAAT,EAAA,kBAAAW,KAAAJ,OAaWK,KAAAA,YAAHD,KAAAJ,MAAA,SAAA,aAGQM,SAAMC,SAAaC,GACdD,EAAAA,iBAGAA,KAALR,SAAiBU,SAAjB,cACHL,KAAAG,YAMgBH,KAAAG,YAAAE,mBAVbL,KAAKG,YAAc,IAAIb,MAAMgB,YAAYN,KAAKF,SAclCS,KAAQJ,YAAWK,aAAYC,YAAnC,UAGQT,KAAGG,YAAAO,aAAAC,SAAA,QAAAA,SACCC,CADZC,QAAA,GAKYC,CACMA,SAANzB,EAAA0B,OAAA,WACH,IAAAR,EAAAf,QAAAgB,YAAAR,KAAAJ,OATLgB,EAAStB,MAAM0B,gBAAgBT,GAaRU,EAAM,CAE7BC,OAAAN,EAAAM,QAjBE5B,MAAA6B,kBAAAP,EAAAQ,OAAAH,EAAA5B,EAAA0B,OAAA,SAAAD,EAAAO,GALlBP,GAAAA,EAAAQ,OAewBC,MAAMT,EAASQ,OAetCtB,KAAAwB,oBAEsBC,WAAvBpC,EAAA0B,MAAAf,KAAA,cAAA,OACAA,MACH,CA3DT0B,SAAArC,EAAAsC,SA+DQ3B,QAIQA,KAAW4B,UACnB5B,KAAoB4B,SAAAC,IAAA,UAAA,GAGnB7B,KAAAL,SAAAmC,SAAA,YAbG9B,KAAKL,SAASoC,QAAQ,UAgBtBC,kBADiD,WAExCJ,KAAAA,YAAkBK,sBADS,MACMD,WAAU,WAAhDhC,KAAA4B,WACKjC,KAASc,SAAYpB,EAAA,4CAA1B6C,SAAAlC,KAAAF,SACKH,KAASoC,SAAQF,IAAA,UAAtB,IAGX7B,KAAAG,YAAAO,aAAAC,SAAA,CAAAE,QAAA,GAAA,CAjFTmB,SAAA,OAAAN,SAAArC,EAAA0B,OAAA,WADJf,KAAA4B,SAAAjB,SAAA,CAAAE,QAAA,GAAA,CAAAmB,SAAA,SA8EwBhC,KAAKL,SAASc,YAAY,YAC1BT,KAAKL,SAASoC,QAAQ,WACvB/B,WAhFvB,CAoFGmC","file":"ClearCachesUtility.min.js","sourcesContent":["(function($) {\n    Craft.ClearCachesUtility = Garnish.Base.extend(\n        {\n            $trigger: null,\n            $form: null,\n\n            init: function(formId) {\n                this.$form = $('#' + formId);\n                this.$trigger = $('input.submit', this.$form);\n                this.$status = $('.utility-status', this.$form);\n\n                this.addListener(this.$form, 'submit', 'onSubmit');\n            },\n\n            onSubmit: function(ev) {\n                ev.preventDefault();\n\n                if (!this.$trigger.hasClass('disabled')) {\n                    if (!this.progressBar) {\n                        this.progressBar = new Craft.ProgressBar(this.$status);\n                    }\n                    else {\n                        this.progressBar.resetProgressBar();\n                    }\n\n                    this.progressBar.$progressBar.removeClass('hidden');\n\n                    this.progressBar.$progressBar.velocity('stop').velocity(\n                        {\n                            opacity: 1\n                        },\n                        {\n                            complete: $.proxy(function() {\n                                var postData = Garnish.getPostData(this.$form),\n                                    params = Craft.expandPostArray(postData);\n\n                                var data = {\n                                    caches: params.caches\n                                };\n\n                                Craft.postActionRequest(params.action, data, $.proxy(function(response, textStatus) {\n                                        if (response && response.error) {\n                                            alert(response.error);\n                                        }\n\n                                        this.updateProgressBar();\n\n                                        setTimeout($.proxy(this, 'onComplete'), 300);\n                                    }, this),\n                                    {\n                                        complete: $.noop\n                                    });\n                            }, this)\n                        });\n\n                    if (this.$allDone) {\n                        this.$allDone.css('opacity', 0);\n                    }\n\n                    this.$trigger.addClass('disabled');\n                    this.$trigger.trigger('blur');\n                }\n            },\n\n            updateProgressBar: function() {\n                var width = 100;\n                this.progressBar.setProgressPercentage(width);\n            },\n\n            onComplete: function() {\n                if (!this.$allDone) {\n                    this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.progressBar.$progressBar.velocity({opacity: 0}, {\n                    duration: 'fast', complete: $.proxy(function() {\n                        this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                        this.$trigger.removeClass('disabled');\n                        this.$trigger.trigger('focus');\n                    }, this)\n                });\n            }\n        });\n})(jQuery);\n"]}