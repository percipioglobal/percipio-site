{"version":3,"sources":["editentry/src/EntryTypeSwitcher.js"],"names":["$","Craft","EntryTypeSwitcher","Garnish","Base","extend","$typeSelect","$spinner","addListener","insertAfter","this","parent","onTypeChange","addClass","ev","removeClass","trigger","postActionRequest","cp","$primaryForm","serialize","proxy","response","textStatus","length","replaceWith","tabsHtml","insertBefore","$tabs","initUiElements","html","fieldsHtml","slugGenerator","setNewSource","headHtml","appendFootHtml","bodyHtml","initTabs","jQuery"],"mappings":"CAAA,SAACA,GAEGC,MAAAC,kBAAAC,QAAAC,KAAAC,OACMH,CAEEI,YADJ,KAEYC,SAFZ,KAKaD,KAAAA,WACAC,KAALD,YAAkBN,EAAA,cAEbQ,KAAAA,SAAiBF,EAAAA,iCAAtBG,YAAAC,KAAAJ,YAAAK,UAGQD,KAAEF,YAAaE,KAAAJ,YAAA,SAAA,iBAInBM,aAAcC,SAASC,GAH3BJ,KAAKH,SAASQ,YAAY,UAMbC,MAALC,kBAAa,4BAAbhB,MAAAiB,GAAAC,aAAAC,YAAApB,EAAAqB,OAAA,SAAAC,EAAAC,GAGUC,GADDd,KAAKH,SAAdM,SAAA,UACkB,YAARW,EAAQ,CACRC,KAANT,QAAkBM,oBAEPI,IAAAA,EAAUC,EAAAA,SACxBC,EAAAJ,OAHGI,EAAMH,YAAYH,EAASI,UAMzBG,EAANP,EAAuBI,UAAvBC,aAAA3B,EAAA,aADAA,EAAE,WAAW8B,KAAKR,EAASS,YAMhBC,MAAAA,eAAkBhC,EAAA,YACzBgC,MAAcC,eAAaX,EAA3BY,UACHjC,MAAAkC,eAAAb,EAAAc,UAID,oBAAAJ,eACHA,cAAAC,aAAA,UAzCjBhC,MAAAiB,GAAAmB,WAwCoB3B,KAAKM,QAAQ,iBAElBN,UA7CnB,CAgDG4B","file":"EntryTypeSwitcher.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.EntryTypeSwitcher = Garnish.Base.extend(\n        {\n            $typeSelect: null,\n            $spinner: null,\n\n            init: function() {\n                this.$typeSelect = $('#entryType');\n                this.$spinner = $('<div class=\"spinner hidden\"/>').insertAfter(this.$typeSelect.parent());\n\n                this.addListener(this.$typeSelect, 'change', 'onTypeChange');\n            },\n\n            onTypeChange: function(ev) {\n                this.$spinner.removeClass('hidden');\n\n                Craft.postActionRequest('entries/switch-entry-type', Craft.cp.$primaryForm.serialize(), $.proxy(function(response, textStatus) {\n                    this.$spinner.addClass('hidden');\n\n                    if (textStatus === 'success') {\n                        this.trigger('beforeTypeChange');\n\n                        var $tabs = $('#tabs');\n                        if ($tabs.length) {\n                            $tabs.replaceWith(response.tabsHtml);\n                        } else {\n                            $(response.tabsHtml).insertBefore($('#content'))\n                        }\n\n                        $('#fields').html(response.fieldsHtml);\n                        Craft.initUiElements($('#fields'));\n                        Craft.appendHeadHtml(response.headHtml);\n                        Craft.appendFootHtml(response.bodyHtml);\n\n                        // Update the slug generator with the new title input\n                        if (typeof slugGenerator !== 'undefined') {\n                            slugGenerator.setNewSource('#title');\n                        }\n\n                        Craft.cp.initTabs();\n\n                        this.trigger('typeChange');\n                    }\n                }, this));\n            }\n        });\n})(jQuery);\n"]}