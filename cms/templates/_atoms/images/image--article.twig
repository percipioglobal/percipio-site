{% extends "_atoms/images/image--variables" %}

{# 
    ### OPTIONS ###
    ---------------

    ## INHERITED

    image: (OBJ) -- Pass through the image object
    sizes: (ARR) -- sizes array for responsive images
    alt: (STR) -- The alt text
    ratio: (STR) -- Give the aspect ratio in the correct format eg. is1by1 / is16by9 ( optional )
    caption: (STR) -- The caption text ( optional )
    author: (STR) -- The author of the image ( optional )
    source: (STR) -- The image source ( optional )
    swatch: (OBJ) -- swatch containing primary and secondary colours ( optional )

    ## ADDED 

    optimized: (OBJ) -- Add the image optimized field to the atom
    placeholder: (OBJ) --- Add the placeholder image to the atom

#}

{% import '_macros/atoms' as render %}

{% block image %}

    {%- set values = values|merge({
        optimized: options.image.optimizeArticles ??? null,
        placeholder: options.placeholders.articlePlaceholder[0].optimizeArticles ??? null,
    }) -%}

    {%- minify -%}

        <figure role="figure" aria-labelledby="{{- values.alt ~ '-' ~ values.image.id -}}" class="w-full h-full">

            <picture class="block relative {{ values.ratio -}}">

                <source data-srcset="{{- values.optimized.srcsetWebP() ??? values.placeholder.srcsetWebP() -}}"
                        sizes="{%- for size in values.sizes -%}{{- not loop.last ? size ~ ',' : size -}}{%- endfor -%}"
                        type="image/webp"
                />

                <source data-srcset="{{- values.optimized.srcset() ??? values.placeholder.srcset() -}}"
                        sizes="{%- for size in values.sizes -%}{{- not loop.last ? size ~ ',' : size -}}{%- endfor -%}"
                />

                <img    
                        src="{{- values.optimized.placeholderImage() -}}"
                        data-src="{{- values.optimized.src() -}}" 
                        data-srcset="{{- values.optimized.srcset() ??? values.placeholder.srcset() -}}"
                        sizes="{%- for size in values.sizes -%}{{- not loop.last ? size ~ ',' : size -}}{%- endfor -%}"
                        class="lazyload"        
                        loading="lazy"    
                        alt="{{- values.alt -}}"
                        
                />

            </picture>

            {% if values.caption %}

                {{- render.atom('text', 'caption', {
                    caption: values.caption,
                    author: values.author,
                    source: values.source,
                    id: values.alt ~ '-' ~ values.image.id,
                    swatch: values.swatch ??? null,
                }) -}}

            {% endif %}

        </figure>

    {%- endminify -%}

{%- endblock -%}